# Generated by Django 5.2.2 on 2025-06-05 04:37

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('effect', models.TextField(blank=True)),
                ('short_effect', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Abilities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EvolutionChain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain_id', models.IntegerField(db_index=True, unique=True)),
                ('chain_data', models.JSONField()),
            ],
            options={
                'verbose_name_plural': 'Evolution Chains',
                'ordering': ['chain_id'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pokemon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokedex_id', models.IntegerField(db_index=True, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('height', models.IntegerField(help_text='Height in decimeters')),
                ('weight', models.IntegerField(help_text='Weight in hectograms')),
                ('base_experience', models.IntegerField(blank=True, null=True)),
                ('hp', models.PositiveIntegerField()),
                ('attack', models.PositiveIntegerField()),
                ('defense', models.PositiveIntegerField()),
                ('special_attack', models.PositiveIntegerField()),
                ('special_defense', models.PositiveIntegerField()),
                ('speed', models.PositiveIntegerField()),
                ('sprite_front_default', models.URLField(blank=True)),
                ('sprite_front_shiny', models.URLField(blank=True)),
                ('abilities', models.ManyToManyField(to='pokemon.ability')),
                ('evolution_chain', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pokemon', to='pokemon.evolutionchain')),
                ('types', models.ManyToManyField(to='pokemon.type')),
            ],
            options={
                'ordering': ['pokedex_id'],
            },
        ),
        migrations.CreateModel(
            name='PokemonSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genus', models.CharField(blank=True, max_length=100)),
                ('generation', models.PositiveIntegerField()),
                ('gender_rate', models.IntegerField(help_text='-1 for genderless, or 0-8 for female ratio')),
                ('egg_groups', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=list, size=None)),
                ('base_happiness', models.PositiveIntegerField(blank=True, null=True)),
                ('capture_rate', models.PositiveIntegerField()),
                ('is_legendary', models.BooleanField(default=False)),
                ('is_mythical', models.BooleanField(default=False)),
                ('pokemon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='species', to='pokemon.pokemon')),
            ],
            options={
                'verbose_name_plural': 'Pokemon Species',
                'ordering': ['pokemon__pokedex_id'],
            },
        ),
        migrations.CreateModel(
            name='Move',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('power', models.PositiveIntegerField(blank=True, null=True)),
                ('pp', models.PositiveIntegerField(blank=True, null=True)),
                ('accuracy', models.PositiveIntegerField(blank=True, null=True)),
                ('damage_class', models.CharField(choices=[('physical', 'Physical'), ('special', 'Special'), ('status', 'Status')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('move_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moves', to='pokemon.type')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonMove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learn_method', models.CharField(choices=[('level-up', 'Level Up'), ('machine', 'TM/TR'), ('egg', 'Egg Move'), ('tutor', 'Move Tutor')], max_length=20)),
                ('level_learned', models.PositiveIntegerField(blank=True, help_text='Required only for level-up moves', null=True)),
                ('move', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pokemon.move')),
                ('pokemon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moves', to='pokemon.pokemon')),
            ],
            options={
                'verbose_name_plural': 'Pokemon Moves',
                'unique_together': {('pokemon', 'move', 'learn_method')},
            },
        ),
    ]
